{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","muutos","id","type","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","Person","person","poistaminen","name","number","onClick","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","showFiltered","setShowFiltered","setMessage","useEffect","personService","initialNotes","notificationType","setTimeout","event","target","preventDefault","personObject","found","find","undefined","window","confirm","changedPerson","returned","map","catch","error","returnedPerson","concat","console","log","toLowerCase","includes","poistettu","res","loput","handlePoisto","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26245d4e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ filter, muutos }) => {\r\n    return (\r\n        <div>\r\n            filter shown with\r\n            <input id={filter}\r\n                   type=\"text\"\r\n                   value={filter}\r\n                   onChange={muutos}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\n\r\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => {\r\n    return (\r\n      <div>\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameChange}/>\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Person = ({ person, poistaminen }) => {\r\n\r\n    return (\r\n      <li>\r\n        {person.name} {person.number}\r\n        <button onClick={poistaminen}>delete</button>  \r\n      </li>\r\n    )\r\n  }\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={message.type}>\r\n        {message.message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst poisto = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, poisto, update}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Person from './components/Person'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport axios from 'axios'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber]  = useState('')\n  const [showFiltered, setShowFiltered] = useState('')\n  const [ message, setMessage ] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialNotes => {\n        setPersons(initialNotes)\n      })\n  }, [])\n\n  const notificationType = (message, type='successful') => {\n    setMessage({message, type})\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }  \n\n   const handlePoisto = (event,id) => {    \n    event.preventDefault()\n    const poistettu = persons.find(person => person.id === id)\n    personService\n      .poisto(id)  \n      .then(res => {\n        const loput = persons.filter(person => person.id !== id);\n        notificationType(`Deleted ${poistettu.name}`)\n        setPersons(loput);\n      })  \n    \n  } \n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    const found = persons.find(person => person.name === personObject.name)\n    if(found !== undefined) {\n      const result = window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)\n      if (result) {\n        const changedPerson = { ...found, number: personObject.number }\n        personService\n          .update(found.id, changedPerson)\n          .then(returned => {\n            notificationType(`Changed ${changedPerson.name} number`)\n            setPersons(persons.map(person => person.number !== found.number ? person : returned))\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(error => {\n            notificationType(\n              `Information of ${changedPerson.name} has already been removed from server`, 'error'\n            )\n            setNewName('')\n            setNewNumber('')\n            return\n          })\n          return\n      } else {\n        setNewName('')\n        setNewNumber('')\n        return\n      }\n    }\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        notificationType(`Added ${returnedPerson.name}`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000)\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        notificationType(`${error.response.data.error}`, 'error')\n      })\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter filter={showFiltered} muutos={event => setShowFiltered(event.target.value)} />\n\n      <h3>add a new</h3>\n\n      <PersonForm addPerson={addPerson} \n                  newName={newName} \n                  handleNameChange={handleNameChange}\n                  newNumber={newNumber}\n                  handleNumberChange={handleNumberChange}/>\n\n      <h2>Numbers</h2>\n      <ul>\n        {persons.filter(person => person.name.toLowerCase().includes(showFiltered) || showFiltered === '')\n                .map(person => \n                <Person key={person.id} \n                        person={person} \n                        poistaminen={(event) => handlePoisto(event, person.id)}/> \n          )}\n      </ul>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}